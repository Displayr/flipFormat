language: r
r:
  - devel
dist: bionic
cache: packages
warnings_are_errors: false
latex: false

# need higher g++ version for rstan
# https://docs.travis-ci.com/user/languages/cpp/#gcc-on-linux
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - gfortran-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6 && CXX_OLEVEL=3"

# install debian libraries to match R-servers
# update pre-installed packages to latest versions
before_install:
  - export R_REMOTES_NO_ERRORS_FROM_WARNINGS="true"
  - eval "${MATRIX_EVAL}"
  - sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
  - sudo apt-get -qq update
  - sudo apt-get install -y libgdal-dev libproj-dev python-protobuf libprotoc-dev libprotobuf-dev libv8-dev librsvg2-dev libmpfr-dev libnlopt-dev libharfbuzz-dev libfribidi-dev
  - sudo add-apt-repository -y ppa:cran/libgit2
  - sudo apt-get -qq update
  - sudo apt-get install libgit2-dev
  - rcode="options('testthat.progress.max_fails' = Inf); "
  - rcode+="tfile <- tempfile(); capture.output(res<-devtools::test(), file = tfile); out <- readLines(tfile); cat(out, sep = '\n'); "
  - rcode+="line.fail <- max(grep('FAIL', out)); "
  - rcode+="tmp <- unlist(strsplit(split='[[:space:]]+', out[line.fail])); "
  - rcode+="pos.fail <- grep('FAIL', tmp); n.fail <- as.numeric(tmp[pos.fail+1]); "
  - rcode+="res <- as.data.frame(res);"
  - rcode+="out <- data.frame(fail = res[['failed']] + res[['error']], file = unlist(res[['file']]), warning = unlist(res[['warning']])); "
  - rcode+="write.csv(out, file='test_results.csv', row.names = FALSE); "
  - rcode+="quit(status = !identical(n.fail, 0), save='no');"
  - mkdir -p ~/.R/
  - echo "CXX = g++-6" >> ~/.R/Makevars
  - echo "CXXFLAGS = `R CMD config CXXFLAGS` -g0 -flto -Wno-unused-local-typedefs" >> ~/.R/Makevars
  - echo "CXXFLAGS += -Wno-ignored-attributes -Wno-deprecated-declarations" >> ~/.R/Makevars
  - echo "CXX_STD = CXX14" >> ~/.R/Makevars
  - echo "CXX14 = g++-6" >> ~/.R/Makevars
  - echo "CXX14PICFLAGS = -fpic" >> ~/.R/Makevars
  - export CLANG_EXTRA_ARG=""
  - if [[ $CXX = "clang++" ]] ;  then export CLANG_EXTRA_ARG=" -Qunused-arguments -fcolor-diagnostics " ; fi
  - sed -i.bak "s/O[0-3]/O$CXX_OLEVEL/" ~/.R/Makevars
  - Rscript tools/travis_run_before_install.R

r_packages:
  - devtools
  - roxygen2
  - covr

r_github_packages:
  - Displayr/flipDevTools
  - Displayr/flipChartTests
  - Displayr/flipExampleData
  - CRAN/pracma@2.3.3

script:
  - R CMD build --no-manual --no-build-vignettes --no-resave-data .
  - R CMD check --as-cran --no-manual --no-build-vignettes --no-tests *.tar.gz
  - if [ -d tests/testthat ]; then
    Rscript --default-packages='datasets,utils,grDevices,graphics,stats,methods' -e "$rcode";
    fi
  # Prepare repository to push to github
  - git config user.name travisCISnapshots
  - git remote set-url origin "https://oauth2:$WTOKEN@github.com/Displayr/flipFormat.git"
  - git add tests/testthat/snapshots
  - if [[ $(git status -s tests/testthat/snapshots) ]]; then git commit -m "Snapshots added from Travis build $TRAVIS_BUILD_NUMBER [ci skip]"; fi
  # Reconnect repository to master branch - this must happen AFTER the commit
  - git checkout -b temp
  - git branch -f $TRAVIS_BRANCH temp
  - git push origin $TRAVIS_BRANCH || true  #never report error code

notifications:
  slack:
    rooms:
      - displayr:FTgSTNHC2rpanhJMGTKMwZXM#github-notifications
    template:
      - "Build <%{build_url}|#%{build_number}> %{result} in %{repository_name}@%{branch} by %{author}: <%{compare_url}|%{commit_subject}>"
    on_success: change
    on_failure: always

# Warning notifications and downstream package builds are implemented
# by calling R functions so they can be updated in this package without
# committing a new change to .travis.yml in each repository
after_success:
  - Rscript -e "require(flipDevTools); NotifyWarnings(); TriggerDownstreamBuilds()"
  - travis_wait Rscript -e "flipDevTools::CheckCoverage()"
after_failure:
  - Rscript -e "require(flipDevTools); NotifyWarnings()"
